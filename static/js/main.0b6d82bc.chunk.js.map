{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","matchContact","props","onSubmit","contacts","namesInPhonebook","map","numbersInPhonebook","includes","alert","this","className","s","form","htmlFor","label","type","onChange","placeholder","input","button","Component","ContactList","onDeleteContact","id","onClick","Filter","App","filter","addContact","contact","shortid","generate","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","deleteContact","contactId","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","console","log","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6d82bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3-hVt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1vYOJ\",\"button\":\"ContactForm_button__2myGi\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.setState({ name: '', number: '' });\r\n    if (this.matchContact()) {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n  };\r\n\r\n  matchContact = () => {\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    const namesInPhonebook = contacts.map(({ name }) => name);\r\n    const numbersInPhonebook = contacts.map(({ number }) => number);\r\n\r\n    if (\r\n      namesInPhonebook.includes(name) ||\r\n      numbersInPhonebook.includes(number)\r\n    ) {\r\n      alert(`${name}${number} is already in contacts!!!`);\r\n      return true;\r\n    }\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all fields');\r\n      return true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Rosie Simpson\"\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"459-12-56\"\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"Contacts__item\">\r\n          <p className=\"Contacts__text\">\r\n            {name} : {number}\r\n          </p>\r\n\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('update contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}